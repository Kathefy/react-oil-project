{"version":3,"sources":["FrontPage.js","ChooseChart.js","Sectors.js","Regions.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Watch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","btnclickPrev","classList","currentSlide","state","length","setState","btnclickNext","date","Date","endDate","_this2","timer","setInterval","slider","clearInterval","daysBetween","date1","date2","date1Ms","getTime","differenceMs","Math","round","monthsBetween","elements","div0","getFullYear","div1","div2","onClick","map","item","index","key","concat","Footer","Link","to","FrontPage","_Component4","apply","arguments","inherits","createClass","value","react","FrontPage_Header","FrontPage_Watch","FrontPage_Footer","Navigation","_Component","ChooseChart","_Component2","ChooseChart_Navigation","Sectors","countryChange","e","table","toConsumableArray","sectorsListChecked","newTableyear","years","itemOne","push","data","filter","element","year","target","indexOf","region","forEach","sector","resultFilter","number","chartSectorData","sectorChange","deleteSector","splice","regions","sectors","fetch","then","resp","ok","json","Error","oil","catch","err","console","log","_this3","graph","index_esm","height","chartType","loader","options","chart","title","subtitle","rootProps","data-testid","onChange","type","Regions","countriesListChecked","deleteCountry","chartRegionData","width","NotFound","NavigationGraphs","HeaderChart","App_NavigationGraphs","FooterCharts","ChartSector","App_HeaderChart","Sectors_Sectors","App_FooterCharts","ChartRegion","Regions_Regions","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.414b0598.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"page-header\">\n        <div className=\"container\">\n          <h1>Popyt na ropę naftową</h1>\n          <p>\n            Popyt na ropę naftową rośnie codzienne. Uużywamy więcej ropy, niż\n            odkrywamy, sięgamy po coraz trudniej dostępne zasoby. Ale na jak\n            długo w tej sytuacji wystarczy nam ropy? I co będzie jak się\n            skończy?...\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nclass Watch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      endDate: new Date(this.props.endDate),\n      currentSlide: 0,\n      classList: [\n        \"banner-slide banner-slide-active\",\n        \"banner-slide\",\n        \"banner-slide\"\n      ]\n    };\n  }\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({\n        date: new Date()\n      });\n    }, 1000);\n    this.slider = setInterval(() => {\n      this.btnclickNext();\n    }, 3000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    clearInterval(this.slider);\n  }\n  // Change the class name for active slider\n  btnclickPrev = () => {\n    let active = \"banner-slide banner-slide-active\";\n    let classList = [\"banner-slide\", \"banner-slide\", \"banner-slide\"];\n    let currentSlide = this.state.currentSlide;\n    if (currentSlide === 0) {\n      currentSlide = classList.length - 1;\n    } else {\n      currentSlide = currentSlide - 1;\n    }\n    classList[currentSlide] = active;\n    this.setState({\n      currentSlide: currentSlide,\n      classList: classList\n    });\n  };\n  btnclickNext = () => {\n    let active = \"banner-slide banner-slide-active\";\n    let classList = [\"banner-slide\", \"banner-slide\", \"banner-slide\"];\n    let currentSlide = this.state.currentSlide;\n    if (currentSlide === classList.length - 1) {\n      currentSlide = 0;\n    } else {\n      currentSlide = currentSlide + 1;\n    }\n    classList[currentSlide] = active;\n    this.setState({\n      currentSlide: currentSlide,\n      classList: classList\n    });\n  };\n  render() {\n    Date.daysBetween = function(date1, date2) {\n      //Get 1 day in milliseconds\n      const oneDay = 1000 * 60 * 60 * 24;\n      // Convert both dates to milliseconds\n      const date1Ms = date1.getTime();\n      const date2Ms = date2.getTime();\n      // Calculate the difference in milliseconds\n      var differenceMs = date2Ms - date1Ms;\n      // Convert back to days and return\n      return Math.round(differenceMs / oneDay);\n    };\n    Date.monthsBetween = function(date1, date2) {\n      const oneMonth = 1000 * 60 * 60 * 24 * 30;\n      const date1Ms = date1.getTime();\n      const date2Ms = date2.getTime();\n      var differenceMs = date2Ms - date1Ms;\n      return Math.round(differenceMs / oneMonth);\n    };\n    const elements = {\n      div0:\n        this.state.endDate.getFullYear() -\n        this.state.date.getFullYear() +\n        \" lat\",\n      div1:\n        Date.monthsBetween(this.state.date, this.state.endDate) + \" miesięcy\",\n      div2: Date.daysBetween(this.state.date, this.state.endDate) + \" dni\"\n    };\n    return (\n      <div className=\"main-banner\">\n        <div className=\"container\">\n          <div className=\"banner\">\n            <button className=\"banner-prev\" onClick={this.btnclickPrev}>\n              <i className=\"fa fa-angle-left\" />\n            </button>\n            <button className=\"banner-next\" onClick={this.btnclickNext}>\n              <i className=\"fa fa-angle-right\" />\n            </button>\n            <div className=\"banner-slides\">\n              {this.state.classList.map((item, index) => {\n                return (\n                  <div key={index} className={item}>\n                    <p>\n                      Światowe rezerwy ropy naftowey wynoszą{\" \"}\n                      <span>1696.6 tys mln baryłek</span>\n                    </p>\n                    <p>\n                      Biorąc pod uwagę dzienne uzycie ropy naftowey tych\n                      rezerwów wystarczy na:\n                    </p>\n                    <div className=\"slider-number\">\n                      {elements[`div${index}`]}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <div className=\"container\">\n          <div className=\"footer-text\">Dowiedz się więcej</div>\n          <Link to=\"/charts\">Kliknij tutaj</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class FrontPage extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Watch endDate=\"March 12, 2068\" />\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Navigation extends Component {\n  render() {\n    return (\n      <div className=\"main-page\">\n        <Link to=\"/\">Strona Główna</Link>\n      </div>\n    );\n  }\n}\n\nexport class ChooseChart extends Component {\n  render() {\n    return (\n      <div className=\"choose-chart-main\">\n        <div className=\"container\">\n          <Navigation />\n          <div className=\"choose-chart\">\n            <div className=\"choose-chart-text\">Wybierz wykres</div>\n            <div className=\"choose-chart-links\">\n              <Link to=\"/sector\">Sektor</Link>\n              <Link to=\"/region\">Region</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nexport class Sectors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectorsListChecked: [],\n      data: [],\n      regions: [],\n      sectors: [],\n      years: [],\n      value: \"World\",\n      chartSectorData: []\n    };\n  }\n  countryChange = e => {\n    const table = [\"Year\", ...this.state.sectorsListChecked];\n    const newTableyear = this.state.years.map((item, index) => {\n      let itemOne = [];\n      itemOne.push(item);\n\n      const data = this.state.data\n        .filter(element => element.year === item)\n        .filter(element => e.target.value.indexOf(element.region) > -1);\n\n      this.state.sectorsListChecked.forEach(sector => {\n        let resultFilter = data.filter(element => element.sector === sector);\n        itemOne.push(resultFilter[0].number);\n      });\n\n      return itemOne;\n    });\n    const chartSectorData = [table, ...newTableyear];\n    this.setState({\n      value: e.target.value,\n      chartSectorData: chartSectorData\n    });\n  };\n  sectorChange = (e, index) => {\n    let sectorsListChecked = this.state.sectorsListChecked;\n    if (sectorsListChecked.indexOf(e.target.value) === -1) {\n      sectorsListChecked.push(e.target.value);\n    } else {\n      let deleteSector = sectorsListChecked.indexOf(e.target.value);\n      sectorsListChecked.splice(deleteSector, 1);\n    }\n    //Filter data for the graphics\n    const table = [\"Year\", ...sectorsListChecked];\n    const newTableyear = this.state.years.map((item, index) => {\n      let itemOne = [];\n      itemOne.push(item);\n\n      const data = this.state.data\n        .filter(element => element.year === item)\n        .filter(element => this.state.value.indexOf(element.region) > -1);\n\n      sectorsListChecked.forEach(sector => {\n        let resultFilter = data.filter(element => element.sector === sector);\n        itemOne.push(resultFilter[0].number);\n      });\n\n      return itemOne;\n    });\n    const chartSectorData = [table, ...newTableyear];\n    this.setState({\n      sectorsListChecked: sectorsListChecked,\n      chartSectorData: chartSectorData\n    });\n  };\n  // Get data from the server\n  componentDidMount() {\n    fetch(\"db.json\")\n      .then(resp => {\n        if (resp.ok) return resp.json();\n        else throw new Error(\"Błąd sieci!\");\n      })\n      .then(data => {\n        // Create the list of sectors and regions\n        let sectors = [];\n        let regions = [];\n        let years = [];\n        data.oil.forEach(function(element) {\n          if (sectors.indexOf(element.sector) === -1) {\n            sectors.push(element.sector);\n          }\n          if (regions.indexOf(element.region) === -1) {\n            regions.push(element.region);\n          }\n          if (years.indexOf(element.year) === -1) {\n            years.push(element.year);\n          }\n        });\n\n        this.setState({\n          data: data.oil,\n          sectors: sectors,\n          regions: regions,\n          years: years\n        });\n      })\n      .catch(err => {\n        console.log(\"Błąd!\", err);\n      });\n  }\n  render() {\n    let graph = null;\n    if (this.state.sectorsListChecked.length > 0) {\n      graph = (\n        <div className=\"chart\">\n          <Chart\n            height={\"400px\"}\n            chartType=\"Line\"\n            loader={<div>Loading Chart</div>}\n            data={this.state.chartSectorData}\n            options={{\n              chart: {\n                title: `Popyt na ropę naftową, region: ${\n                  this.state.value\n                }, sektory: ${this.state.sectorsListChecked}`,\n                subtitle: \"Milion baryłek dzienne\"\n              }\n            }}\n            rootProps={{ \"data-testid\": \"3\" }}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"sectors\">\n        <div className=\"container clearfix\">\n          <div className=\"forms\">\n            <form>\n              <fieldset>\n                <legend>Wybierz region:</legend>\n                <select value={this.state.value} onChange={this.countryChange}>\n                  {this.state.regions.map((item, index) => {\n                    return (\n                      <option key={index} value={item}>\n                        {item}\n                      </option>\n                    );\n                  })}\n                </select>\n              </fieldset>\n            </form>\n            <form>\n              <fieldset>\n                <legend>Wybierz sektor:</legend>\n                {this.state.sectors.map((item, index) => {\n                  return (\n                    <label key={index}>\n                      <input\n                        type=\"checkbox\"\n                        value={item}\n                        onChange={e => this.sectorChange(e, index)}\n                      />\n                      {item}\n                    </label>\n                  );\n                })}\n              </fieldset>\n            </form>\n          </div>\n          {graph}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nexport class Regions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesListChecked: [],\n      data: [],\n      regions: [],\n      sectors: [],\n      years: [],\n      value: \"Road transportation\",\n      chartRegionData: []\n    };\n  }\n  countryChange = (e, index) => {\n    let countriesListChecked = this.state.countriesListChecked;\n    if (countriesListChecked.indexOf(e.target.value) === -1) {\n      countriesListChecked.push(e.target.value);\n    } else {\n      let deleteCountry = countriesListChecked.indexOf(e.target.value);\n      countriesListChecked.splice(deleteCountry, 1);\n    }\n    const table = [\"Year\", ...countriesListChecked];\n    const newTableyear = this.state.years.map((item, index) => {\n      let itemOne = [];\n      itemOne.push(item);\n\n      const data = this.state.data\n        .filter(element => element.year === item)\n        .filter(element => this.state.value.indexOf(element.sector) > -1);\n      countriesListChecked.forEach(region => {\n        let resultFilter = data.filter(element => element.region === region);\n        itemOne.push(resultFilter[0].number);\n      });\n\n      return itemOne;\n    });\n    const chartRegionData = [table, ...newTableyear];\n    this.setState({\n      countriesListChecked: countriesListChecked,\n      chartRegionData: chartRegionData\n    });\n  };\n  sectorChange = e => {\n    const table = [\"Year\", ...this.state.countriesListChecked];\n    const newTableyear = this.state.years.map((item, index) => {\n      let itemOne = [];\n      itemOne.push(item);\n\n      const data = this.state.data\n        .filter(element => element.year === item)\n        .filter(element => e.target.value.indexOf(element.sector) > -1);\n      this.state.countriesListChecked.forEach(region => {\n        let resultFilter = data.filter(element => element.region === region);\n        itemOne.push(resultFilter[0].number);\n      });\n\n      return itemOne;\n    });\n    const chartRegionData = [table, ...newTableyear];\n    this.setState({\n      value: e.target.value,\n      chartRegionData: chartRegionData\n    });\n  };\n  // Get data from the server\n  componentDidMount() {\n    fetch(\"db.json\")\n      .then(resp => {\n        if (resp.ok) return resp.json();\n        else throw new Error(\"Błąd sieci!\");\n      })\n      .then(data => {\n        // Create the list of sectors and regions\n        let sectors = [];\n        let regions = [];\n        let years = [];\n        data.oil.forEach(function(element) {\n          if (sectors.indexOf(element.sector) === -1) {\n            sectors.push(element.sector);\n          }\n          if (regions.indexOf(element.region) === -1) {\n            regions.push(element.region);\n          }\n          if (years.indexOf(element.year) === -1) {\n            years.push(element.year);\n          }\n        });\n        this.setState({\n          data: data.oil,\n          sectors: sectors,\n          regions: regions,\n          years: years\n        });\n      })\n      .catch(err => {\n        console.log(\"Błąd!\", err);\n      });\n  }\n  render() {\n    let graph = null;\n    if (this.state.countriesListChecked.length > 0) {\n      graph = (\n        <div className=\"chart\">\n          <Chart\n            width={\"600px\"}\n            height={\"400px\"}\n            chartType=\"Line\"\n            loader={<div>Loading Chart</div>}\n            data={this.state.chartRegionData}\n            options={{\n              chart: {\n                title: `Popyt na ropę naftową, kraje: ${\n                  this.state.countriesListChecked\n                }, sektory: ${this.state.value}`,\n                subtitle: \"Milion baryłek dzienne\"\n              }\n            }}\n            rootProps={{ \"data-testid\": \"3\" }}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"sectors\">\n        <div className=\"container clearfix\">\n          <div className=\"forms\">\n            <form>\n              <fieldset>\n                <legend>Wybierz sektor:</legend>\n                <select value={this.state.value} onChange={this.sectorChange}>\n                  {this.state.sectors.map((item, index) => {\n                    return (\n                      <option key={index} value={item}>\n                        {item}\n                      </option>\n                    );\n                  })}\n                </select>\n              </fieldset>\n            </form>\n            <form>\n              <fieldset>\n                <legend>Wybierz region:</legend>\n                {this.state.regions.map((item, index) => {\n                  return (\n                    <label key={index}>\n                      <input\n                        type=\"checkbox\"\n                        value={item}\n                        onChange={e => this.countryChange(e, index)}\n                      />\n                      {item}\n                    </label>\n                  );\n                })}\n              </fieldset>\n            </form>\n          </div>\n          {graph}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class NotFound extends Component {\n  render() {\n    return (\n      <div className=\"not-found\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <h3>404 page not found</h3>\n            <p>Przykro nam, ale strona, której szukasz, nie istnieje</p>\n            <Link to=\"/\">Strona Główna</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.scss\";\nimport { HashRouter, Route, Link, Switch } from \"react-router-dom\";\nimport { FrontPage } from \"./FrontPage\";\nimport { ChooseChart } from \"./ChooseChart\";\nimport { Sectors } from \"./Sectors\";\nimport { Regions } from \"./Regions\";\nimport { NotFound } from \"./NotFound\";\n\nclass NavigationGraphs extends Component {\n  render() {\n    return (\n      <div className=\"main-page\">\n        <Link to=\"/\">Strona Główna</Link>\n        <Link to=\"/charts\">Wróc</Link>\n      </div>\n    );\n  }\n}\n\nclass HeaderChart extends Component {\n  render() {\n    return (\n      <header className=\"page-header\">\n        <div className=\"container\">\n          <NavigationGraphs />\n          <h1>Popyt na ropę naftową</h1>\n          <p>\n            Popyt na ropę naftową rośnie codzienne. Uużywamy więcej ropy, niż\n            odkrywamy, sięgamy po coraz trudniej dostępne zasoby. Ale na jak\n            długo w tej sytuacji wystarczy nam ropy? I co będzie jak się\n            skończy?...\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nclass FooterCharts extends Component {\n  render() {\n    return (\n      <div className=\"footer-chart\">\n        <div className=\"container\">\n          <p>*Na podstawie danych statystycznych OPEC World Oil Outlook 2018</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ChartSector extends Component {\n  render() {\n    return (\n      <Fragment>\n        <HeaderChart />\n        <Sectors />\n        <FooterCharts />\n      </Fragment>\n    );\n  }\n}\n\nclass ChartRegion extends Component {\n  render() {\n    return (\n      <Fragment>\n        <HeaderChart />\n        <Regions />\n        <FooterCharts />\n      </Fragment>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={FrontPage} />\n            <Route path=\"/charts\" component={ChooseChart} />\n            <Route path=\"/sector\" component={ChartSector} />\n            <Route path=\"/region\" component={ChartRegion} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}